syntax = "proto3";

package dogker.andrenk.billing_service;

import "google/protobuf/timestamp.proto";

option go_package = "dogker/andrenk/billing-service/pb";

service BillingService {
  rpc getBilling(GetBillingRequest) returns (BillingResponse);
  rpc postPayment(PostPaymentRequest) returns (PaymentResponse);
  rpc getTransactionHistory(GetTransactionHistoryRequest) returns (TransactionHistoryResponse);
  rpc getTransaction(getTransactionRequest) returns (Transaction);
}

enum ContainerStatus {
	RUN = 0;
	STOPPED = 1;
}

enum TransactionStatus {
  CAPTURE = 0;
  SETTLEMENT = 1;
  PENDING = 2;
  DENY = 3;
  CANCEL = 4;
  EXPIRE = 5;
  FAILURE = 6;
}

// BILLING
message Billing {
  string id = 1;
  string userId = 2;
  string containerId = 3;
  ContainerUsage containerUsage = 4;
  float totalCost = 5;
  google.protobuf.Timestamp dueTime = 6;
}


message GetBillingRequest {
  string userId = 1;
  string containerId = 2;
  google.protobuf.Timestamp timestamp = 3;
}

message BillingResponse {
  Billing billing = 1;
  google.protobuf.Timestamp currentTime = 5;
}

message ContainerUsage {
	string id = 1;
	string name = 4;
	google.protobuf.Timestamp created_time = 7;
	float cpu_usage = 8;
	float memory_usage = 9;
	float network_ingress_usage = 10;
	float network_egress_usage = 11;
	google.protobuf.Timestamp terminatedTime = 13;
}


// PAYMENT
message PostPaymentRequest {
  string userId = 1;
  string billingId = 2;
}

message PaymentResponse {
  string userId = 1;
  string billingId = 2;
  string token = 3; //Midtrans SNAP Token
}

// TRANSACTION
message Transaction {
  string id = 1;
  string userId = 2;
  string billingId = 3;
  string containerId = 4;
  TransactionStatus status = 5;
  float amount = 6;
  google.protobuf.Timestamp timestamp = 7;
}

message GetTransactionHistoryRequest {
  string userId = 1;
}

message TransactionHistoryResponse {
  repeated Transaction transactions = 1;
}

message getTransactionRequest {
  string userId = 1;
  string transactionId = 2;
}

message getTransactionResponse {
  Transaction transaction = 1;
}